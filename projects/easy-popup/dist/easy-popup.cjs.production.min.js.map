{"version":3,"file":"easy-popup.cjs.production.min.js","sources":["../src/portal.tsx","../src/types.ts","../src/popup.tsx"],"sourcesContent":["import { useRef, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { PortalProps } from './types'\r\nimport PropTypes from 'prop-types'\r\n\r\n// Determines whether it is a browser environment\r\nconst canUseDOM = !!(\r\n  typeof window !== 'undefined' &&\r\n  window.document &&\r\n  window.document.createElement\r\n)\r\n\r\nconst Portal = ({ node, children }: PortalProps) => {\r\n  const defaultNodeRef = useRef<HTMLElement | null>(null)\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (defaultNodeRef.current) {\r\n        document.body.removeChild(defaultNodeRef.current)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  if (!canUseDOM) return null\r\n\r\n  if (!node && !defaultNodeRef.current) {\r\n    const defaultNode = document.createElement('div')\r\n    defaultNode.classList.add('easy-popup__portal')\r\n    defaultNodeRef.current = defaultNode\r\n    document.body.appendChild(defaultNode)\r\n  }\r\n\r\n  return ReactDOM.createPortal(children, node || defaultNodeRef.current!)\r\n}\r\n\r\nPortal.propTypes = {\r\n  node: canUseDOM ? PropTypes.instanceOf(HTMLElement) : PropTypes.any,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Portal\r\n","import { string } from 'prop-types'\r\n\r\nexport const positions = ['top', 'right', 'bottom', 'left', 'center'] as const\r\n\r\nexport type Positions = typeof positions[number]\r\n\r\nexport type PortalProps = React.PropsWithChildren<{\r\n  node?: HTMLElement\r\n}>\r\n\r\nexport type PopupProps = React.PropsWithChildren<\r\n  { node?: HTMLElement }\r\n  & typeof defaultProps\r\n>\r\n\r\nexport const defaultProps = {\r\n  visible: false,\r\n  position: \"center\" as Positions,\r\n  mask: true,\r\n  maskClosable: false,\r\n  customClassName: string,\r\n  onClose: () => { },\r\n  destroyOnClose: false,\r\n}\r\n","import React, { useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport classnames from 'classnames'\r\nimport Portal from './portal'\r\nimport { PopupProps, defaultProps, positions, Positions } from './types'\r\nimport './index.scss'\r\n\r\n// Class name prefix\r\nconst prefixCls = 'easy-popup'\r\n// Animation duration\r\nconst duration = 300\r\n// Mapping of animations\r\nconst animations: { [key in Positions]: string } = {\r\n  bottom: `${prefixCls}-slide-up`,\r\n  right: `${prefixCls}-slide-left`,\r\n  left: `${prefixCls}-slide-right`,\r\n  top: `${prefixCls}-slide-down`,\r\n  center: `${prefixCls}-fade`,\r\n}\r\n\r\nconst Popup = (props: PopupProps) => {\r\n  // DOM will not mount until 'visible' first time becomes 'true'\r\n  const firstRenderRef = useRef(false)\r\n\r\n  const { visible } = props\r\n\r\n  if (!firstRenderRef.current && !visible) return null\r\n  if (!firstRenderRef.current) {\r\n    firstRenderRef.current = true\r\n  }\r\n\r\n  const {\r\n    node,\r\n    mask,\r\n    maskClosable,\r\n    onClose,\r\n    customClassName,\r\n    position,\r\n    destroyOnClose,\r\n    children,\r\n  } = props\r\n\r\n  // 蒙层点击事件\r\n  const onMaskClick = () => {\r\n    if (maskClosable) {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  // 拼接容器节点类名\r\n  const rootCls = classnames(\r\n    prefixCls,\r\n    customClassName,\r\n    `${prefixCls}__${position}`\r\n  )\r\n\r\n  // 拼接蒙层节点类名\r\n  const maskCls = classnames(`${prefixCls}-mask`, {\r\n    [`${prefixCls}-mask--visible`]: mask,\r\n  })\r\n\r\n  // 拼接内容节点类名\r\n  const contentCls = classnames(\r\n    `${prefixCls}-content`,\r\n    `${prefixCls}-content__${position}`\r\n  )\r\n\r\n  // 内容过渡动画\r\n  const contentAnimation = animations[position]\r\n\r\n  return (\r\n    <Portal node={node}>\r\n      <div className={rootCls}>\r\n        <CSSTransition\r\n          in={visible}\r\n          timeout={duration}\r\n          classNames={`${prefixCls}-fade`}\r\n          appear\r\n        >\r\n          <div className={maskCls} onClick={onMaskClick}></div>\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={visible}\r\n          timeout={duration}\r\n          classNames={contentAnimation}\r\n          unmountOnExit={destroyOnClose}\r\n          appear\r\n        >\r\n          <div className={contentCls}>{children}</div>\r\n        </CSSTransition>\r\n      </div>\r\n    </Portal>\r\n  )\r\n}\r\n\r\nPopup.propTypes = {\r\n  visible: PropTypes.bool,\r\n  position: PropTypes.oneOf(positions),\r\n  mask: PropTypes.bool,\r\n  maskClosable: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  destroyOnClose: PropTypes.bool,\r\n  stopScrollUnderMask: PropTypes.bool,\r\n}\r\n\r\nPopup.defaultProps = defaultProps\r\n\r\nexport default Popup\r\n"],"names":["canUseDOM","window","document","createElement","Portal","node","children","defaultNodeRef","useRef","useEffect","current","body","removeChild","defaultNode","classList","add","appendChild","ReactDOM","createPortal","propTypes","PropTypes","instanceOf","HTMLElement","any","defaultProps","visible","position","mask","maskClosable","customClassName","string","onClose","destroyOnClose","animations","bottom","prefixCls","right","left","top","center","Popup","props","firstRenderRef","rootCls","classnames","maskCls","contentCls","contentAnimation","React","className","CSSTransition","in","timeout","classNames","appear","onClick","unmountOnExit","bool","oneOf","func","stopScrollUnderMask"],"mappings":"gSAMMA,IACc,oBAAXC,SACPA,OAAOC,WACPD,OAAOC,SAASC,eAGZC,EAAS,gBAAGC,IAAAA,KAAMC,IAAAA,SAChBC,EAAiBC,SAA2B,SAElDC,aAAU,kBACD,WACDF,EAAeG,SACjBR,SAASS,KAAKC,YAAYL,EAAeG,YAG5C,KAEEV,EAAW,OAAO,SAElBK,IAASE,EAAeG,QAAS,KAC9BG,EAAcX,SAASC,cAAc,OAC3CU,EAAYC,UAAUC,IAAI,sBAC1BR,EAAeG,QAAUG,EACzBX,SAASS,KAAKK,YAAYH,UAGrBI,EAASC,aAAaZ,EAAUD,GAAQE,EAAeG,UAGhEN,EAAOe,UAAY,CACjBd,KAAML,EAAYoB,EAAUC,WAAWC,aAAeF,EAAUG,IAChEjB,SAAUc,EAAUf,MCnCf,IAaMmB,EAAe,CAC1BC,SAAS,EACTC,SAAU,SACVC,MAAM,EACNC,cAAc,EACdC,gBAAiBC,SACjBC,QAAS,aACTC,gBAAgB,GCTZC,EAA6C,CACjDC,OAAWC,sBACXC,MAAUD,wBACVE,KAASF,yBACTG,IAAQH,wBACRI,OAAWJ,mBAGPK,EAAQ,SAACC,SAEPC,EAAiBlC,UAAO,GAEtBiB,EAAYgB,EAAZhB,YAEHiB,EAAehC,UAAYe,EAAS,OAAO,KAC3CiB,EAAehC,UAClBgC,EAAehC,SAAU,OAIzBL,EAQEoC,EARFpC,KACAsB,EAOEc,EAPFd,KACAC,EAMEa,EANFb,aACAG,EAKEU,EALFV,QAEAL,EAGEe,EAHFf,SACAM,EAEES,EAFFT,eACA1B,EACEmC,EADFnC,SAWIqC,EAAUC,EA1CA,aAgCZH,EAJFZ,gBAiBGM,eAAcT,GAIbmB,EAAUD,EAAcT,0BACxBA,4BAA4BR,MAI5BmB,EAAaF,EACdT,qBACAA,uBAAsBT,GAIrBqB,EAAmBd,EAAWP,UAGlCsB,gBAAC5C,GAAOC,KAAMA,GACZ2C,uBAAKC,UAAWN,GACdK,gBAACE,iBACCC,GAAI1B,EACJ2B,QAjEO,IAkEPC,WAAelB,kBACfmB,WAEAN,uBAAKC,UAAWJ,EAASU,QApCb,WACd3B,GACFG,QAoCEiB,gBAACE,iBACCC,GAAI1B,EACJ2B,QAzEO,IA0EPC,WAAYN,EACZS,cAAexB,EACfsB,WAEAN,uBAAKC,UAAWH,GAAaxC,OAOvCkC,EAAMrB,UAAY,CAChBM,QAASL,EAAUqC,KACnB/B,SAAUN,EAAUsC,MDhGG,CAAC,MAAO,QAAS,SAAU,OAAQ,WCiG1D/B,KAAMP,EAAUqC,KAChB7B,aAAcR,EAAUqC,KACxB1B,QAASX,EAAUuC,KACnB3B,eAAgBZ,EAAUqC,KAC1BG,oBAAqBxC,EAAUqC,MAGjCjB,EAAMhB,aAAeA"}